generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PSQL_CONNECTION_STRING")
}

model employees {
  id                Int              @id @default(autoincrement())
  name              String
  curp              String           @unique
  rfc               String           @unique
  position          String
  salary            Decimal          @db.Decimal(10, 2)
  status            employees_status @default(active)
  created_by        Int?
  company_id        Int?
  created_at        DateTime?        @default(now()) @db.Timestamp(6)
  companies         companies?       @relation(fields: [company_id], references: [id], onUpdate: NoAction)
  admin_user_tokens admins?          @relation(fields: [created_by], references: [id], onUpdate: NoAction)
}

model sessions {
  id            Int       @id @default(autoincrement())
  chat_id       BigInt    @unique
  user_metadata Json?
  admin_id      Int?
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  admins        admins?   @relation(fields: [admin_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model admins {
  id         Int           @id @default(autoincrement())
  username   BigInt        @unique @default(dbgenerated("(floor(((random() * ('9000000000'::bigint)::double precision) + (1000000000)::double precision)))::bigint"))
  password   String        @default(dbgenerated("encode(gen_random_bytes(16), 'base64'::text)"))
  status     admins_status @default(active)
  company_id Int?
  created_at DateTime?     @default(now()) @db.Timestamp(6)
  companies  companies?    @relation(fields: [company_id], references: [id], onUpdate: NoAction)
  employees  employees[]
  sessions   sessions[]
}

model companies {
  id         Int              @id @default(autoincrement())
  name       String           @unique
  rfc        String           @unique
  status     companies_status @default(active)
  created_at DateTime?        @default(now()) @db.Timestamp(6)
  admins     admins[]
  employees  employees[]
}

enum admins_status {
  active
  inactive
}

enum companies_status {
  active
  inactive
}

enum employees_status {
  active
  inactive
}
